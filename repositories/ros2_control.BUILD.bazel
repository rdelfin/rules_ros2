load("@com_github_mvukov_rules_ros2//ros2:cc_defs.bzl", "ros2_cpp_library")
load(
    "@com_github_mvukov_rules_ros2//ros2:interfaces.bzl",
    "cpp_ros2_interface_library",
    "py_ros2_interface_library",
    "ros2_interface_library",
)
load("@rules_cc//cc:defs.bzl", "cc_library")
load("@rules_python//python:defs.bzl", "py_binary", "py_library")
load("@rules_ros2_pip_deps//:requirements.bzl", "requirement")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "hardware_interface",
    srcs = glob(["hardware_interface/src/*.cpp"]),
    hdrs = glob([
        "hardware_interface/include/**/*.hpp",
        "hardware_interface/include/**/*.h",
    ]),
    includes = ["hardware_interface/include"],
    deps = [
        "@ros2_control_msgs//:cpp_control_msgs",
        "@ros2_pluginlib//:pluginlib",
        "@ros2_rcl_interfaces//:cpp_lifecycle_msgs",
        "@ros2_rclcpp//:rclcpp_lifecycle",
        "@ros2_rcpputils//:rcpputils",
        "@ros2_rcutils//:rcutils",
    ],
)

ros2_cpp_library(
    name = "controller_interface",
    srcs = glob(
        ["controller_interface/src/*.cpp"],
        exclude = ["controller_interface/mock"],
    ),
    hdrs = glob([
        "controller_interface/include/**/*.hpp",
        "controller_interface/include/**/*.h",
    ]),
    includes = ["controller_interface/include"],
    ros2_package_name = "controller_interface",
    deps = [
        ":hardware_interface",
        "@ros2_rclcpp//:rclcpp_lifecycle",
    ],
)

ros2_interface_library(
    name = "controller_manager_msgs",
    srcs = glob([
        "controller_manager_msgs/msg/*.msg",
        "controller_manager_msgs/srv/*.srv",
    ]),
    deps = [
        "@ros2_rcl_interfaces//:builtin_interfaces",
        "@ros2_rcl_interfaces//:lifecycle_msgs",
    ],
)

cpp_ros2_interface_library(
    name = "cpp_controller_manager_msgs",
    deps = [":controller_manager_msgs"],
)

py_ros2_interface_library(
    name = "py_controller_manager_msgs",
    deps = [":controller_manager_msgs"],
)

ros2_cpp_library(
    name = "controller_manager",
    srcs = ["controller_manager/src/controller_manager.cpp"],
    hdrs = [
        "controller_manager/include/controller_manager/controller_manager.hpp",
        "controller_manager/include/controller_manager/controller_spec.hpp",
        "controller_manager/include/controller_manager/visibility_control.h",
    ],
    includes = ["controller_manager/include"],
    ros2_package_name = "controller_manager",
    deps = [
        ":controller_interface",
        ":cpp_controller_manager_msgs",
        ":hardware_interface",
        "@ros2_rcl_interfaces//:cpp_lifecycle_msgs",
        "@ros2_rclcpp//:rclcpp",
    ],
)

py_library(
    name = "controller_manager_py",
    srcs = glob([
        "controller_manager/controller_manager/*.py",
        "controller_manager/controller_manager/**/*.py",
    ]),
    imports = ["controller_manager"],
    deps = [
        ":py_controller_manager_msgs",
        "@ros2_rclpy//:rclpy",
    ],
)

py_binary(
    name = "spawner",
    srcs = glob(["controller_manager/controller_manager/**/*.py"]),
    imports = ["controller_manager"],
    main = "controller_manager/controller_manager/spawner.py",
    deps = [
        ":py_controller_manager_msgs",
        "@ros2_rcl_interfaces//:py_rcl_interfaces",
        "@ros2_rclpy//:rclpy",
        "@ros2cli//:ros2param",
        requirement("pyyaml"),
    ],
)

py_library(
    name = "ros2controlcli",
    srcs = glob([
        "ros2controlcli/ros2controlcli/__init__.py",
        "ros2controlcli/ros2controlcli/api/__init__.py",
        "ros2controlcli/ros2controlcli/command/control.py",
        "ros2controlcli/ros2controlcli/command/__init__.py",
        "ros2controlcli/ros2controlcli/verb/__init__.py",
        "ros2controlcli/ros2controlcli/verb/list_controllers.py",
        "ros2controlcli/ros2controlcli/verb/list_controller_types.py",
        "ros2controlcli/ros2controlcli/verb/list_hardware_components.py",
        "ros2controlcli/ros2controlcli/verb/list_hardware_interfaces.py",
        "ros2controlcli/ros2controlcli/verb/load_controller.py",
        "ros2controlcli/ros2controlcli/verb/reload_controller_libraries.py",
        "ros2controlcli/ros2controlcli/verb/set_controller_state.py",
        "ros2controlcli/ros2controlcli/verb/set_hardware_component_state.py",
        "ros2controlcli/ros2controlcli/verb/switch_controllers.py",
        "ros2controlcli/ros2controlcli/verb/unload_controller.py",
    ]),
    imports = ["ros2controlcli"],
    deps = [
        ":controller_manager_py",
        ":py_controller_manager_msgs",
        "@ros2_rclpy//:rclpy",
        "@ros2_rosidl_runtime_py//:rosidl_runtime_py",
        "@ros2cli",
        "@ros2cli//:ros2node",
        "@ros2cli//:ros2param",
    ],
)
